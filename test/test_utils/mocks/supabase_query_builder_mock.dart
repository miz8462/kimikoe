// Mocks generated by Mockito 5.4.4 from annotations
// in kimikoe_app/test/test_utils/mocks/a_mock_generater.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:supabase/supabase.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseStreamFilterBuilder_0 extends _i1.SmartFake
    implements _i2.SupabaseStreamFilterBuilder {
  _FakeSupabaseStreamFilterBuilder_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_1<T> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T> {
  _FakePostgrestFilterBuilder_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestQueryBuilder_2<T> extends _i1.SmartFake
    implements _i2.PostgrestQueryBuilder<T> {
  _FakePostgrestQueryBuilder_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestBuilder_3<T, S, R> extends _i1.SmartFake
    implements _i2.PostgrestBuilder<T, S, R> {
  _FakePostgrestBuilder_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_4 extends _i1.SmartFake implements Uri {
  _FakeUri_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_5<T> extends _i1.SmartFake implements _i3.Future<T> {
  _FakeFuture_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SupabaseQueryBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseQueryBuilder extends _i1.Mock
    implements _i2.SupabaseQueryBuilder {
  @override
  _i2.SupabaseStreamFilterBuilder stream({required List<String>? primaryKey}) =>
      (super.noSuchMethod(
        Invocation.method(
          #stream,
          [],
          {#primaryKey: primaryKey},
        ),
        returnValue: _FakeSupabaseStreamFilterBuilder_0(
          this,
          Invocation.method(
            #stream,
            [],
            {#primaryKey: primaryKey},
          ),
        ),
        returnValueForMissingStub: _FakeSupabaseStreamFilterBuilder_0(
          this,
          Invocation.method(
            #stream,
            [],
            {#primaryKey: primaryKey},
          ),
        ),
      ) as _i2.SupabaseStreamFilterBuilder);

  @override
  _i2.PostgrestFilterBuilder<List<Map<String, dynamic>>> select(
          [String? columns = r'*']) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [columns],
        ),
        returnValue: _FakePostgrestFilterBuilder_1<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #select,
            [columns],
          ),
        ),
        returnValueForMissingStub:
            _FakePostgrestFilterBuilder_1<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #select,
            [columns],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<List<Map<String, dynamic>>>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> insert(
    Object? values, {
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [values],
          {#defaultToNull: defaultToNull},
        ),
        returnValue: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #insert,
            [values],
            {#defaultToNull: defaultToNull},
          ),
        ),
        returnValueForMissingStub: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #insert,
            [values],
            {#defaultToNull: defaultToNull},
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> upsert(
    Object? values, {
    String? onConflict,
    bool? ignoreDuplicates = false,
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsert,
          [values],
          {
            #onConflict: onConflict,
            #ignoreDuplicates: ignoreDuplicates,
            #defaultToNull: defaultToNull,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #upsert,
            [values],
            {
              #onConflict: onConflict,
              #ignoreDuplicates: ignoreDuplicates,
              #defaultToNull: defaultToNull,
            },
          ),
        ),
        returnValueForMissingStub: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #upsert,
            [values],
            {
              #onConflict: onConflict,
              #ignoreDuplicates: ignoreDuplicates,
              #defaultToNull: defaultToNull,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> update(Map<dynamic, dynamic>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [values],
        ),
        returnValue: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #update,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #update,
            [values],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #delete,
            [],
          ),
        ),
        returnValueForMissingStub: _FakePostgrestFilterBuilder_1<dynamic>(
          this,
          Invocation.method(
            #delete,
            [],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<int> count(
          [_i2.CountOption? option = _i2.CountOption.exact]) =>
      (super.noSuchMethod(
        Invocation.method(
          #count,
          [option],
        ),
        returnValue: _FakePostgrestFilterBuilder_1<int>(
          this,
          Invocation.method(
            #count,
            [option],
          ),
        ),
        returnValueForMissingStub: _FakePostgrestFilterBuilder_1<int>(
          this,
          Invocation.method(
            #count,
            [option],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<int>);

  @override
  _i2.PostgrestQueryBuilder<dynamic> setHeader(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHeader,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakePostgrestQueryBuilder_2<dynamic>(
          this,
          Invocation.method(
            #setHeader,
            [
              key,
              value,
            ],
          ),
        ),
        returnValueForMissingStub: _FakePostgrestQueryBuilder_2<dynamic>(
          this,
          Invocation.method(
            #setHeader,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestQueryBuilder<dynamic>);

  @override
  _i2.PostgrestBuilder<U, U, dynamic> withConverter<U>(
          _i2.PostgrestConverter<U, dynamic>? converter) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [converter],
        ),
        returnValue: _FakePostgrestBuilder_3<U, U, dynamic>(
          this,
          Invocation.method(
            #withConverter,
            [converter],
          ),
        ),
        returnValueForMissingStub: _FakePostgrestBuilder_3<U, U, dynamic>(
          this,
          Invocation.method(
            #withConverter,
            [converter],
          ),
        ),
      ) as _i2.PostgrestBuilder<U, U, dynamic>);

  @override
  Uri appendSearchParams(
    String? key,
    String? value, [
    Uri? url,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendSearchParams,
          [
            key,
            value,
            url,
          ],
        ),
        returnValue: _FakeUri_4(
          this,
          Invocation.method(
            #appendSearchParams,
            [
              key,
              value,
              url,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeUri_4(
          this,
          Invocation.method(
            #appendSearchParams,
            [
              key,
              value,
              url,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri overrideSearchParams(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overrideSearchParams,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeUri_4(
          this,
          Invocation.method(
            #overrideSearchParams,
            [
              key,
              value,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeUri_4(
          this,
          Invocation.method(
            #overrideSearchParams,
            [
              key,
              value,
            ],
          ),
        ),
      ) as Uri);

  @override
  _i3.Stream<dynamic> asStream() => (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue: _i3.Stream<dynamic>.empty(),
        returnValueForMissingStub: _i3.Stream<dynamic>.empty(),
      ) as _i3.Stream<dynamic>);

  @override
  _i3.Future<dynamic> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<U> then<U>(
    _i3.FutureOr<U> Function(dynamic)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<U>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (U v) => _i3.Future<U>.value(v),
            ) ??
            _FakeFuture_5<U>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
        returnValueForMissingStub: _i4.ifNotNull(
              _i4.dummyValueOrNull<U>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (U v) => _i3.Future<U>.value(v),
            ) ??
            _FakeFuture_5<U>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
      ) as _i3.Future<U>);

  @override
  _i3.Future<dynamic> timeout(
    Duration? timeLimit, {
    _i3.FutureOr<dynamic> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> whenComplete(_i3.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}
