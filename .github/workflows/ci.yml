name: Flutter Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [34]
    steps:
      - uses: actions/checkout@v4 # リポジトリのコードをクローン
      
      # .envファイルを作りGithubActionsシークレットに登録した環境変数を.envに書き込む
      - name: Create .env file
        run: |
          touch .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
          echo "GOOGLE_OAUTH_IOS_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_IOS_CLIENT_ID }}" >> .env
          echo "GOOGLE_OAUTH_WEB_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_WEB_CLIENT_ID }}" >> .env

      # Flutter SDKのキャッシュ
      - name: Cache Flutter SDK 
        uses: actions/cache@v3 
        with: 
          path: /opt/hostedtoolcache/flutter 
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }} 
          restore-keys: | 
            ${{ runner.os }}-flutter-

      - uses: subosito/flutter-action@v2 
        with: 
          flutter-version: '3.24.0' # latestはダメだった

      # 依存関係のキャッシュ
      - name: Cache dependencies 
        uses: actions/cache@v3 
        with: 
          path:
            ~/.pub-cache
            ~/.flutter 
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }} 
          restore-keys: | 
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get
      
      # - name: Check for outdated dependencies 
      #   run: flutter pub outdated

      # # コードチェック、テスト
      # - name: Check Code Formatting 
      #   run: dart format .
  
      # - name: Analyze project source
      #   run: flutter analyze

      # - name: Run unit tests
      #   run: flutter test --coverage

      # アンドロイドエミュレータの環境を構築 
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up Java 
        uses: actions/setup-java@v4 
        with: 
          distribution: 'zulu'
          java-version: '17'

      # エミュレーターのキャッシュ 
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

          
      - name: Set up Android Emulator and Integration Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: flutter test integration_test/main_test.dart --coverage --coverage-path=coverage/integration_lcov.info

      # インテグレーションテストのカバレッジファイルの確認
      - name: Verify integration test coverage
        run: |
          if [ -f coverage/integration_lcov.info ]; then
            echo "Integration test coverage file exists."
          else
            echo "Integration test coverage file does not exist."
            exit 1
          fi

      # - name: Save integration test coverage 
      #   run: mv coverage/lcov.info coverage/integration_test/lcov.info

      # - name: Merge coverage files
      #   run: lcov -a coverage/lcov.info -a coverage/integration_test/lcov.info -o coverage/lcov.info

        
      - name: Upload Code Coverage to Codecov
        uses: codecov/codecov-action@v5
        with: 
          file: ./coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          slug: miz8462/kimikoe