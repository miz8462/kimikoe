name: Flutter Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4 # リポジトリのコードをクローン
      
      # .envファイルを作りGithubActionsシークレットに登録した環境変数を.envに書き込む
      - name: Create .env file
        run: |
          touch .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
          echo "GOOGLE_OAUTH_IOS_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_IOS_CLIENT_ID }}" >> .env
          echo "GOOGLE_OAUTH_WEB_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_WEB_CLIENT_ID }}" >> .env

      # Flutter SDKのキャッシュ
      - name: Cache Flutter SDK 
        uses: actions/cache@v3 
        with: 
          path: /opt/hostedtoolcache/flutter 
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }} 
          restore-keys: | 
            ${{ runner.os }}-flutter-

      - uses: subosito/flutter-action@v2 
        with: 
          flutter-version: '3.24.0' # latestはダメだった

      # 依存関係のキャッシュ
      - name: Cache dependencies 
        uses: actions/cache@v3 
        with: 
          path:
            ~/.pub-cache
            ~/.flutter 
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }} 
          restore-keys: | 
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get
      
      - name: Check for outdated dependencies 
        run: flutter pub outdated

      
      # アンドロイドエミュレータの環境を構築
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21' 

      - name: Install Android SDK tools 
        run: | 
          sudo apt-get update 
          sudo apt-get install -y wget unzip 
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O commandlinetools-linux.zip 
          sudo mkdir -p /usr/local/android-sdk/cmdline-tools 
          sudo unzip commandlinetools-linux.zip -d /usr/local/android-sdk/cmdline-tools 
        
          sudo mv /usr/local/android-sdk/cmdline-tools/cmdline-tools /usr/local/android-sdk/cmdline-tools/tools 
          echo "export ANDROID_SDK_ROOT=/usr/local/android-sdk" >> $GITHUB_ENV 
          echo "export PATH=\$PATH:/usr/local/android-sdk/cmdline-tools/tools/bin" >> $GITHUB_ENV 
          echo "export PATH=\$PATH:/usr/local/android-sdk/platform-tools" >> $GITHUB_ENV 

      - name: Accept licenses 
        run: yes | /usr/local/android-sdk/cmdline-tools/tools/bin/sdkmanager --licenses || true
        
      - name: List available system images 
        id: list-images
        run: /usr/local/android-sdk/cmdline-tools/tools/bin/sdkmanager --list

      - name: Install Android SDK platforms 
        run: |
          echo "y" | /usr/local/android-sdk/cmdline-tools/tools/bin/sdkmanager "platforms;android-35" "system-images;android-35;default;arm64-v8a" 
          echo "Installed system images:"
          ls -R /usr/local/android-sdk/system-images/

      - name: Verify system images 
        run: ls /usr/local/android-sdk/system-images/android-35/default/arm64-v8a
        
      - name: Create Android emulator 
        run: echo "no" | /usr/local/android-sdk/cmdline-tools/tools/bin/avdmanager create avd --force --name test --package "system-images;android-35;;arm64-v8a"
        
      - name: List available AVDs
        run: /usr/local/android-sdk/cmdline-tools/tools/bin/avdmanager list avd

      - name: Start Android emulator 
        run: |
          nohup emulator -avd test -no-audio -no-window & 
          adb wait-for-device 
          adb shell input keyevent 82 &

      # コードチェック、テスト
      - name: Check Code Formatting 
        run: dart format .
  
      - name: Analyze project source
        run: flutter analyze

      - name: Run unit tests
        run: flutter test --coverage  

      - name: Run integration tests 
        run: flutter test integration_test/main_test.dart --coverage 

      - name: Upload Code Coverage to Codecov
        uses: codecov/codecov-action@v5
        with: 
          file: ./coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          slug: miz8462/kimikoe